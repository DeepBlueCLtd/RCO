{
  "name": "rco",
  "private": true,
  "version": "0.0.0",
  "engines": {
    "node": "18.x"
  },
  "homepage": ".",
  "scripts": {
    "build:prod": "yarn build",
    "build:test": "cross-env VAL_TEST=true yarn build",
    "serve": "yarn run check-dist && port=$1 && soul  --d ./db/RCO2.sqlite --e $(realpath ./_extensions) --a --atet 15m --rtet 60m --env=$(realpath ./.env) --c http://localhost:5173,http://127.0.0.1:5173",
    "dev": "cross-env NODE_ENV=development vite --open",
    "dev:mock": "cross-env MOCK=true vite --open",
    "build": "tsc && vite build",
    "preview": "vite preview",
    "check-dist": "if [ ! -d dist ]; then echo '\\e[31mError: The \"dist\" folder does not exist. Please run \"yarn build\" first.\\e[0m'; exit 1; else echo 'Dist folder exists'; fi",
    "serve:dev": "soul -d ./db/RCO2.sqlite --e $(realpath ./_devExtensions) --a --atet 15m --rtet 60m --env=$(realpath ./.env)  --c http://localhost:5173,http://127.0.0.1:5173",
    "serve:large": "if [ ! -d dist ]; then echo '\\e[31mError: The \"dist\" folder does not exist. Please run \"yarn build\" first.\\e[0m'; else soul -d ./db/RCO2-large.sqlite -e $(realpath ./_extensions); fi",
    "serve:dev:large": "soul -d ./db/RCO2-large.sqlite -e $(realpath ./_devExtensions)",
    "lint": "eslint . --fix --max-warnings=0",
    "format": "prettier . --write",
    "deploy": "gh-pages -d build",
    "test": "jest",
    "e2e": "yarn playwright test",
    "e2e-ui": "yarn playwright test --ui"
  },
  "dependencies": {
    "@emotion/react": "^11.10.6",
    "@emotion/styled": "^11.10.6",
    "@hookform/resolvers": "^2.9.11",
    "@mui/icons-material": "^5.11.11",
    "@mui/material": "^5.11.13",
    "@mui/styles": "^5.11.13",
    "@mui/system": "^5.11.14",
    "@mui/x-date-pickers": "^6.0.3",
    "@types/bcryptjs": "^2.4.3",
    "@types/preval.macro": "^3.0.0",
    "@vitejs/plugin-react": "^3.1.0",
    "axios": "^1.4.0",
    "bcryptjs": "^2.4.3",
    "better-sqlite3": "^8.1.0",
    "cross-env": "^7.0.3",
    "cross-var": "^1.1.0",
    "crypto-js": "^4.1.1",
    "dayjs": "^1.11.7",
    "luxon": "^3.3.0",
    "mitt": "^3.0.0",
    "preval.macro": "^5.0.0",
    "query-string": "^8.1.0",
    "ra-data-local-forage": "^4.8.4",
    "react": "^18.2.0",
    "react-admin": "4.13.1",
    "react-dom": "^18.2.0",
    "react-idle-timer": "^5.7.2",
    "react-router-dom": "^6.9.0",
    "soul-cli": "0.7.8",
    "vite": "^4.2.0",
    "vite-plugin-babel-macros": "^1.0.6",
    "vite-plugin-environment": "^1.1.3",
    "yup": "^1.0.2"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.22.9",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.21.4",
    "@eslint/create-config": "^0.4.2",
    "@playwright/test": "^1.33.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "^14.0.0",
    "@testing-library/user-event": "^14.4.3",
    "@types/crypto-js": "^4.1.1",
    "@types/luxon": "^3.3.0",
    "@types/query-string": "^6.3.0",
    "@types/react": "^18.0.28",
    "@types/react-dom": "^18.0.11",
    "@typescript-eslint/eslint-plugin": "^5.43.0",
    "@vitejs/plugin-react": "^3.1.0",
    "babel-jest": "^29.6.1",
    "dotenv-cli": "^7.3.0",
    "eslint": "^8.0.1",
    "eslint-config-prettier": "^8.7.0",
    "eslint-config-standard-with-typescript": "^34.0.1",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-n": "^15.0.0",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.32.2",
    "husky": ">=6",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jsdom": "^21.1.1",
    "lint-staged": ">=10",
    "prettier": "^2.8.4",
    "typescript": "*",
    "vite": "^4.2.0"
  },
  "lint-staged": {
    "**/*.{ts,tsx,js,jsx}": [
      "eslint --fix --ignore-path .eslintignore"
    ],
    "**/*.{ts,tsx,js,jsx,json,md,html,css,less}": [
      "prettier --write --ignore-path .prettierignore"
    ]
  },
  "jest": {
    "testEnvironment": "jsdom",
    "setupFilesAfterEnv": [
      "<rootDir>/jest-setup.ts"
    ],
    "moduleNameMapper": {
      "\\.(css|less)$": "identity-obj-proxy"
    },
    "testPathIgnorePatterns": [
      "e2e"
    ],
    "setupFiles": [
      "<rootDir>/.jest/env.js"
    ],
    "transform": {
      "^.+\\.(js|jsx|ts|tsx)$": "babel-jest"
    },
    "transformIgnorePatterns": [
      "/node_modules/(?!query-string)/"
    ]
  }
}
